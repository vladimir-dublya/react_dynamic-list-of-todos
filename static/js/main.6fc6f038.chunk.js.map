{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","className","TodoModal","todos","setOpen","setOnSelect","onSelect","select","find","todo","id","useState","name","email","phone","user","setUser","isUserInfoLoaded","setIsUserInfoLoaded","useEffect","userId","userFromServer","catch","error","Error","type","onClick","title","completed","href","TodoList","open","map","classnames","TodoFilter","query","setQuery","filtered","setFilter","filteredTodos","filter","toLowerCase","includes","onChange","event","target","value","placeholder","defaultValue","style","pointerEvents","App","setTodos","isLoading","setIsLoading","visibleTodos","todosFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6fc6f038.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number | undefined) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader/Loader';\n\ntype Props = {\n  todos: Todo[];\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  setOnSelect: React.Dispatch<React.SetStateAction<number>>;\n  onSelect: number;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todos,\n  setOpen,\n  setOnSelect,\n  onSelect,\n}) => {\n  const select = todos.find((todo) => todo.id === onSelect);\n  const [user, setUser] = useState<User>({\n    id: 0,\n    name: '',\n    email: '',\n    phone: '',\n  });\n  const [isUserInfoLoaded, setIsUserInfoLoaded] = useState(false);\n\n  useEffect(() => {\n    getUser(select?.userId)\n      .then((userFromServer) => {\n        setUser(userFromServer);\n        setIsUserInfoLoaded(true);\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!isUserInfoLoaded ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {onSelect}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setOpen(false);\n                setOnSelect(-1);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {select?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong\n                className={\n                  select?.completed === true\n                    ? 'has-text-success'\n                    : 'has-text-danger'\n                }\n              >\n                {select?.completed === true ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">{user.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport classnames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { TodoModal } from '../TodoModal';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  const [onSelect, setOnSelect] = useState(-1);\n  const [open, setOpen] = useState(false);\n\n  return (\n    <>\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {todos.map(({ id, completed, title }) => {\n            return (\n              <tr\n                data-cy=\"todo\"\n                className={classnames({\n                  'has-background-info-light': onSelect === id,\n                })}\n                key={id}\n              >\n                <td className=\"is-vcentered\">{id}</td>\n                <td className=\"is-vcentered\">\n                  {completed && <i className=\"fas fa-check\" />}\n                </td>\n                <td className=\"is-vcentered is-expanded\">\n                  <p\n                    className={\n                      completed ? 'has-text-success' : 'has-text-danger'\n                    }\n                  >\n                    {title}\n                  </p>\n                </td>\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    key={id}\n                    onClick={() => {\n                      setOpen(true);\n                      setOnSelect(id);\n                    }}\n                  >\n                    <i\n                      className={classnames(\n                        'far',\n                        { 'fa-eye-slash': onSelect === id },\n                        { 'fa-eye': onSelect !== id },\n                      )}\n                    />\n                  </button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n\n      {open && (\n        <TodoModal\n          todos={todos}\n          setOpen={setOpen}\n          onSelect={onSelect}\n          setOnSelect={setOnSelect}\n        />\n      )}\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoList } from '../TodoList';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoFilter: React.FC<Props> = ({ todos }) => {\n  const [query, setQuery] = useState('');\n  const [filtered, setFilter] = useState('');\n\n  let filteredTodos = todos.filter((todo: { title: string }) => todo\n    .title.toLowerCase().includes(query.toLowerCase()));\n\n  if (filtered === 'active') {\n    filteredTodos = filteredTodos.filter((todo) => !todo.completed);\n  } else if (filtered === 'completed') {\n    filteredTodos = filteredTodos.filter((todo) => todo.completed);\n  }\n\n  return (\n    <>\n      <form className=\"field has-addons\">\n        <p className=\"control\">\n          <span className=\"select\">\n            <select\n              data-cy=\"statusSelect\"\n              onChange={(event) => setFilter(event.target.value)}\n            >\n              <option value=\"all\">All</option>\n              <option value=\"active\">Active</option>\n              <option value=\"completed\">Completed</option>\n            </select>\n          </span>\n        </p>\n\n        <p className=\"control is-expanded has-icons-left has-icons-right\">\n          <input\n            data-cy=\"searchInput\"\n            type=\"text\"\n            className=\"input\"\n            placeholder=\"Search...\"\n            defaultValue=\"\"\n            value={query}\n            onChange={(event) => {\n              setQuery(event?.target.value);\n            }}\n          />\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-magnifying-glass\" />\n          </span>\n\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        </p>\n      </form>\n\n      <div className=\"block\">\n        <TodoList todos={filteredTodos} />\n      </div>\n    </>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const visibleTodos = [...todos];\n\n  useEffect(() => {\n    getTodos().then((todosFromServer) => {\n      setIsLoading(false);\n      setTodos(todosFromServer);\n    });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              {isLoading ? <Loader /> : <TodoFilter todos={visibleTodos} />}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}